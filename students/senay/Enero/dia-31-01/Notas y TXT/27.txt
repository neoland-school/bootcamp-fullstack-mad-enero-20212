ejercicios 27/01/2022
En los ejercicios de hoy repetiremos la mayoría de los ejercicios anteriores pero usando esta vez métodos de array:
Crear una función que reciba por parámetros 2 array. Esta función devolverá los 2 arrays concatenados y los mostrará en el navegador.(easy)
Crear una función que reciba un parámetro de entrada y que imprima por pantalla true si el parámetro es un array y false si es otro tipo de dato, ver metodos de array!.(easy)
Crear una función que reciba un array de 10 números e imprima por pantalla true si todos son mayor de 10 o false en caso contrario (hay un metodo de array para esto empieza por E...).(easy)
Crea una función que reciba un array y una palabra e imprima true o false si palabra existe o no dentro del array (ver metodo empieza por i).(easy)
Crear una función para ordenar un array de números desordenados de mayor a menor.(easy)
Crear una función que reciba un array de números y devuelva un array con los que son mayores que 10.(easy)
Crear una función que reciba un array de strings e imprime por pantalla el array con los strings capitalized, ejmp: let =[jose,maca,jorge], output: [Jose,Maca,Jorge].(medium)
Crear una función que dado un número y un array de números, te devuelva  por pantalla la posición donde se encuentra el número o  -1 si no lo encuentra.(medium)
Crear una función que reciba un array,  deberá mostrar en el navegador el array tantas veces como elementos contiene  y en cada una de ellas eliminará el último elemento: El output visualizado debe ser el siguiente:   // 'c', 'c++', 'python', 'golang', 'solidity', typescript', 'javascript', 'java', 'go', 'pascal'                                                                                              // 'c', 'c++', 'python', 'golang', 'solidity', typescript', 'javascript', 'java', 'go'                                                                                                                                                                                  // 'c', 'c++', 'python', 'golang', 'solidity', typescript', 'javascript', 'java'                                                                                                                                                                                         // 'c', 'c++', 'python', 'golang', 'solidity', typescript', 'javascript',    etc..(medium)
Crea una función que dado un número te imprima por pantalla la cantidad de bucles que tiene, un número tiene un bucle cuando tiene un circulo cerrado cuando lo dibujas, ejemp el 6 tiene 1 bucle y el 8 tiene dos bucles, si pasamos a la función el número (897) esta debe arrojar "3 bucles".
Crea una función que dada una palabra y una oración por prompt, la busque en la oración  e imprima por pantalla cuantas veces aparece esa palabra en la oración, la palabra y la oración deben ser parámetros de una función, ejemplo: oración: "Hola, como estas? ", palabra: hola, output: "la palabra hola aparece 1 vez en la oración".(hard)
Crea una función que al pasarle por parámetro un array y un número, esta devuelva el array dividido en tantos sub-arrays como sea necesario, basándonos en el número dado por parámetro que indique su tamaño: ([1,2,3,4],2), output: [[1,2],[3,4].(hard)